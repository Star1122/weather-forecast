import Head from 'next/head'
import React, { useCallback, useEffect, useState } from 'react'
import Button from 'react-bootstrap/Button'
import Form from 'react-bootstrap/Form'

import WeatherCard, { IWeather } from '@/components/WeatherCard'

import styles from '@/styles/Home.module.css'

export default function Home() {
  const [location, setLocation] = useState<string>()
  const [weatherData, setWeatherData] = useState<IWeather[]>([])
  const [selectedDates, setSelectedDates] = useState<string[]>([])

  const handleSubmit = useCallback(async (e: React.SyntheticEvent) => {
    e.preventDefault()

    const target = e.target as typeof e.target & {
      location: { value: string }
    }

    const loc = target.location.value
    if (loc) {
      const response = await fetch(`/api/weather?location=${loc}`)
      const data = await response.json()
      setLocation(loc)
      setWeatherData(data)
    }
  }, [])

  const handleClick = useCallback((date: string) => () => {
    const dates = [...selectedDates]

    const index = dates.indexOf(date)
    if (index === -1) {
      dates.push(date)
    } else {
      dates.splice(index, 1)
    }

    localStorage.setItem(`${location}-selectedDates`, dates.join(','))
    setSelectedDates(dates)
  }, [location, selectedDates])

  useEffect(() => {
    const selectedDatesStr = localStorage.getItem(`${location}-selectedDates`)
    setSelectedDates(selectedDatesStr ? selectedDatesStr.split(',') : [])
  }, [location])

  return (
    <>
      <Head>
        <title>Time to go outside</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Form onSubmit={handleSubmit}>
          <Form.Group className="mb-3" controlId="location">
            <Form.Label>Location</Form.Label>
            <Form.Control type="text" placeholder="Location" />
          </Form.Group>

          <Button variant="primary" type="submit">
            Get Weather
          </Button>
        </Form>

        <div className={styles.container}>
          {weatherData.map((weather: IWeather) => (
            <WeatherCard
              key={weather.date}
              isSelected={selectedDates.indexOf(weather.date) > -1}
              weather={weather}
              handleClick={handleClick}
            />
          ))}
        </div>
      </main>
    </>
  )
}
